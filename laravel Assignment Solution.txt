Question 01 : You have a Laravel application with a form that submits user information using a POST request. Write the code to retrieve the 'name' 
input field value from the request and store it in a variable called $name.

Answer : 
<?php
use Illuminate\Http\Request;

public function processForm(Request $request)
{
    $name = $request->input('name');

    return view('success')->with('name', $name);
}


Question 02: In your Laravel application, you want to retrieve the value of the 'User-Agent' header from the current request. Write the code to
 accomplish this and store the value in a variable called $userAgent.

Answer :
<?php
use Illuminate\Http\Request;


public function getUserAgent(Request $request)
{
    $userAgent = $request->header('User-Agent');


    return view('user_agent', compact('userAgent'));
}



Question 03 :You are building an API endpoint in Laravel that accepts a GET request with a 'page' query parameter. Write the code to retrieve the 
value of the 'page' parameter from the current request and store it in a variable called $page. If the parameter is not present, set $page to null.

Answer :
<?php
use Illuminate\Http\Request;

public function getRequestedPage(Request $request)
{
    $page = $request->query('page', null);


    return response()->json(['page' => $page]);
}



Question 04: Create a JSON response in Laravel with the following data:
{


    "message": "Success",


    "data": {


        "name": "John Doe",


        "age": 25


    }

}

Answer :
<?php 
use Illuminate\Http\JsonResponse;

public function createJsonResponse()
{
    $data = [
        'message' => 'Success',
        'data' => [
            'name' => 'John Doe',
            'age' => 25
        ]
    ];

    return new JsonResponse($data);
}




Question 05: You are implementing a file upload feature in your Laravel application. Write the code to handle a file upload named 'avatar' 
in the current request and store the uploaded file in the 'public/uploads' directory. Use the original filename for the uploaded file.
Answer : 
<?php
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;


public function handleFileUpload(Request $request)
{
    if ($request->hasFile('avatar')) {
        $uploadedFile = $request->file('avatar');
        $originalFilename = $uploadedFile->getClientOriginalName();
        
        $uploadedFile->storeAs('uploads', $originalFilename, 'public');
        
    
        
        return response()->json(['message' => 'File uploaded successfully']);
    }

    return response()->json(['message' => 'No file was found']);
}



Question 06: Retrieve the value of the 'remember_token' cookie from the current request in Laravel and store it in a variable called $rememberToken.
 If the cookie is not present, set $rememberToken to null.

Answer: 
<?php
use Illuminate\Http\Request;

public function retrieveRememberToken(Request $request)
{
    $rememberToken = $request->cookie('remember_token', null);

   

    return response()->json(['rememberToken' => $rememberToken]);
}



Question 07: 
Create a route in Laravel that handles a POST request to the '/submit' URL. Inside the route closure, retrieve the 'email' input parameter from the request and store it in a variable called $email. Return a JSON response with the following data:


{


    "success": true,


    "message": "Form submitted successfully."


}

Answer : 
<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;
use Illuminate\Http\JsonResponse;

Route::post('/submit', function (Request $request) {
    $email = $request->input('email');

    

    $response = [
        'success' => true,
        'message' => 'Form submitted successfully.'
    ];

    return new JsonResponse($response);
});







